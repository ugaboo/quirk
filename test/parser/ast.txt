AsgStmt:
    lvalue:
        NameLiteral: '_'
    rvalue:
        ListLiteral: <empty>
AsgStmt:
    lvalue:
        ListLiteral:
            IntLiteral: 1
            IntLiteral: 2
            IntLiteral: 3
            IntLiteral: 4
            IntLiteral: 5
    rvalue:
        ListLiteral:
            NameLiteral: 'some_name'
            IntLiteral: 18446744073709551615
            FloatLiteral: 3.14
            BoolLiteral: true
            BoolLiteral: false
            NoneLiteral
AsgStmt:
    lvalue:
        NameLiteral: 'x'
    type:
        NameLiteral: 'Int'
    rvalue:
        IntLiteral: 42
AsgStmt:
    lvalue:
        NameLiteral: 'y'
    rvalue:
        IntLiteral: 101
AsgStmt:
    lvalue:
        NameLiteral: 'z'
    type:
        NameLiteral: 'Float'
CallExprStmt:
    designator:
        NameLiteral: 'foo'
    args: <empty>
CallExprStmt:
    designator:
        NameLiteral: 'bar'
    args:
        IntLiteral: 1
        IntLiteral: 2
        IntLiteral: 3
AsgStmt:
    lvalue:
        SubscriptExpr:
            designator:
                NameLiteral: 'arr'
            keys:
                IntLiteral: 1
                IntLiteral: 2
    rvalue:
        MemberAccessExpr:
            designator:
                NameLiteral: 'obj'
            selector:
                NameLiteral: 'field'
AsgStmt:
    lvalue:
        ListLiteral:
            UnaryExpr: Plus
                IntLiteral: 1
            UnaryExpr: Minus
                IntLiteral: 1
            UnaryExpr: BitNot
                IntLiteral: 1
            BinaryExpr: Power
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Mul
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Div
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Mod
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: IntDiv
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Add
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Sub
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: LeftShift
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: RightShift
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: BitAnd
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: BitXor
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: BitOr
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Less
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Greater
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: Equal
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: LessOrEqual
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: GreaterOrEqual
                IntLiteral: 1
                IntLiteral: 2
            BinaryExpr: NotEqual
                IntLiteral: 1
                IntLiteral: 2
    rvalue:
        ListLiteral:
            UnaryExpr: Not
                BoolLiteral: true
            BinaryExpr: And
                BoolLiteral: true
                BoolLiteral: false
            BinaryExpr: Or
                BoolLiteral: true
                BoolLiteral: false
AsgStmt:
    lvalue:
        NameLiteral: '_'
    rvalue:
        BinaryExpr: Add
            BinaryExpr: Add
                IntLiteral: 1
                IntLiteral: 2
            IntLiteral: 3
AsgStmt:
    lvalue:
        NameLiteral: '_'
    rvalue:
        BinaryExpr: Add
            IntLiteral: 1
            BinaryExpr: Add
                IntLiteral: 2
                IntLiteral: 3
IfStmt:
    condition:
        BinaryExpr: Equal
            NameLiteral: 'x'
            IntLiteral: 0
    body: 
        AsgStmt:
            lvalue:
                NameLiteral: 'x'
            rvalue:
                BinaryExpr: Add
                    NameLiteral: 'x'
                    IntLiteral: 1
    condition:
        BinaryExpr: Equal
            NameLiteral: 'x'
            IntLiteral: 1
    body: 
        AsgStmt:
            lvalue:
                NameLiteral: 'x'
            rvalue:
                BinaryExpr: Sub
                    NameLiteral: 'x'
                    IntLiteral: 2
    condition:
        BinaryExpr: Equal
            NameLiteral: 'x'
            UnaryExpr: Minus
                IntLiteral: 1
    body: 
        AsgStmt:
            lvalue:
                NameLiteral: 'x'
            rvalue:
                BinaryExpr: Add
                    NameLiteral: 'x'
                    IntLiteral: 1
    else: 
        AsgStmt:
            lvalue:
                NameLiteral: 'x'
            rvalue:
                IntLiteral: 0
        ContinueStmt
WhileStmt:
    condition:
        BinaryExpr: Greater
            NameLiteral: 'x'
            IntLiteral: 0
    body: 
        AsgStmt:
            lvalue:
                NameLiteral: 'x'
            rvalue:
                BinaryExpr: Sub
                    NameLiteral: 'x'
                    IntLiteral: 1
        BreakStmt
FuncDefStmt: 'foo'
    body: <empty>
FuncDefStmt: 'bar'
    params:
        ParameterDef: 'x'
            type:
                NameLiteral: 'Int'
        ParameterDef: 'y'
            type:
                NameLiteral: 'Float'
    body: <empty>
FuncDefStmt: 'baz'
    params:
        ParameterDef: 'x'
            type:
                NameLiteral: 'Int'
    ret:
        NameLiteral: 'Int'
    body: 
        AsgStmt:
            lvalue:
                NameLiteral: 'x'
            rvalue:
                BinaryExpr: Mul
                    NameLiteral: 'x'
                    IntLiteral: 2
        ReturnStmt
            BinaryExpr: Add
                NameLiteral: 'x'
                IntLiteral: 1
StructDefStmt: 'S'
    fields: <empty>
StructDefStmt: 'Vec2'
    fields: 
        FieldDef: 'x'
            type:
                NameLiteral: 'Float'
        FieldDef: 'y'
            type:
                NameLiteral: 'Float'
StructDefStmt: 'Zero'
    fields: 
        FieldDef: 'value'
            init:
                FloatLiteral: 0
